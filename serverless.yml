service: eventdatapipeline

package:
  include:
    - requirements.txt
  exclude:
    - .git/**

provider:
  region: ap-southeast-2
  name: aws
  runtime: python3.7
  tracing: true # enable tracing
  apiKeys:
    - myFirstKey
    - ${opt:stage}-myFirstKey
  environment:
    eventTable: ${self:custom.eventTable}
    activityTable: ${self:custom.activityTable}
    eventBucket: ${self:custom.eventBucket}
    activityBucket: ${self:custom.activityBucket}
  stage: ${opt:stage, 'dev'}
  iamRoleStatements:
    ${file(resources/iamrole.yml)}

functions:
    ${file(resources/functions.yml)}

plugins:
  - serverless-python-requirements
  - serverless-plugin-tracing
  - serverless-pseudo-parameters
  - serverless-offline-python
  - serverless-step-functions

stepFunctions:
  ${file(resources/stepFunctions.yml)}

custom:
  pythonRequirements:
    layer: false #Put dependencies into a Lambda Layer.
  tableThroughputs:
    production: "5"
    dev: "1"
  eventBucket: billy-workshop-event.${self:provider.stage}
  activityBucket: billy-worshop-activity.${self:provider.stage}
  eventTable: event-${self:provider.stage}
  activityTable: activity-${self:provider.stage}

resources:
  Outputs:
    EventsActivitiesProcess:
      Description: The ARN of the example state machine
      Value:
        Ref: EventsActivitiesProcessDash${opt:stage}
  # dynamodb
  Resources:
    EventTable:
      ${file(resources/eventTable.yml)}
    ActivityTable:
      ${file(resources/activityTable.yml)}
    # s3
    S3BucketEvent:
      ${file(resources/s3BucketEvent.yml)}
    S3BucketActivity:
      ${file(resources/s3BucketActivity.yml)}
